{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","state","url","loading","content","error","handleClick","e","setState","startsWith","console","log","anyorigin","encodeURIComponent","fetch","referrer","then","res","ok","json","Error","contents","catch","finally","handleInput","target","value","handleKeyPress","key","this","className","ContentContainer","React","Component","TopContainer","props","TextField","autoFocus","onKeyPress","onChange","id","label","variant","Button","onClick","CircularProgress","style","width","height","sandbox","srcdoc","Empty","display","alignItems","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd37010a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport TextField from '@mui/material/TextField';\nimport Button from \"@mui/material/Button\"\nimport CircularProgress from '@mui/material/CircularProgress'\nimport EmptyIcon from '@mui/icons-material/Doorbell'\nimport Snackbar from '@mui/material/Snackbar';\n\nclass App extends React.Component {\n\n  state = {\n    url: '-',\n    loading: false,\n    content: null, // '<div>Example HTML string</div>',\n    error: null,\n  }\n\n  handleClick = (e) => {\n    let { url } = this.state\n    // Set to loading\n    this.setState({ loading: true })\n\n    // Fix url\n    if(!url.startsWith('http')) {\n      url =   `http://${url}`\n    }\n    console.log(`url ${url}`)\n\n    // Circumvent crossorigin \n    const anyorigin = `https://api.allorigins.win/get?url=${encodeURIComponent(url)}`\n    // url = 'https://www.nytimes.com/live/2021/09/30/us/government-shutdown-infrastructure'\n\n    \n    // Go get the url and set the inner content\n    fetch(anyorigin,{\n      referrer: 'http://google.com',\n      'Cache-Control': 'no-cache',\n      'Pragma': 'no-cache',\n      'Expires': '0'\n    })\n      .then(res => {\n        if (res.ok) { return res.json() }\n        throw new Error('Network response was not ok.')\n      })\n      .then(json => {\n        // debugger;\n        const content = json.contents\n        this.setState({ content: content })\n        console.log('good')\n      })\n      .catch(e => {\n        console.error(e)\n        this.setState({error:e})\n        console.log('bad')\n      })\n      .finally(() => {\n        // debugger;\n        this.setState({ loading: false })\n      })\n  }\n  handleInput = e => {\n    console.log(e.target.value)\n    this.setState({ url: e.target.value })\n  }\n  handleKeyPress = e => {\n    console.log(`key pressed ${e.key}`)\n    if (e.key == 'Enter') {\n      this.handleClick()\n    }\n  }\n  render() {\n    const { content, loading, url } = this.state\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <TopContainer\n            url={url}\n            handleInput={this.handleInput}\n            handleClick={this.handleClick}\n            handleKeyPress={this.handleKeyPress}\n          />\n        </header>\n        <ContentContainer content={content} loading={loading} />\n      </div>\n    );\n  }\n}\n\nclass TopContainer extends React.Component {\n  render() {\n    const { url, handleClick, handleInput, handleKeyPress } = this.props\n    return (\n      <div className=\"top-container\">\n        <TextField \n          autoFocus\n          onKeyPress={handleKeyPress}\n          className=\"input-container\"\n          onChange={handleInput}\n          id=\"standard-basic\"\n          label=\"https://...\" variant=\"standard\" \n        />\n        <Button\n          variant=\"outlined\"\n          className=\"button-container\"\n          onClick={handleClick}>\n          go\n        </Button>\n      </div>\n    )\n  }\n}\nfunction ContentContainer({ content, loading }) {\n\n  // const html = content && ReactHtmlParser(content)\n  return (\n    <div className=\"content-container\">\n      {loading\n        ? <CircularProgress />\n        : content\n          ? <iframe style={{width:'100%', height:\"100%\"}} sandbox srcdoc={content} />\n          : <Empty />\n      }\n    </div>\n\n  )\n}\n\nfunction Empty() {\n  return (\n    <div style={{display:'flex', alignItems: 'center', height:'100%', width:\"100%\", justifyContent:'center'}}>  \n      <EmptyIcon style={{width:'20vw', height:'20vh'}} />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}